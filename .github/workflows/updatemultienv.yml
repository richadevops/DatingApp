name: latest

on:
  push:

  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to deploy"
        required: true
        type: choice
        options:
          - sit
          - qa
          - uat

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    outputs:
      environment: ${{ steps.set-env.outputs.env }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set environment name
        id: set-env
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "env=all" >> $GITHUB_OUTPUT
          else
            echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Angular CLI
        run: npm install -g @angular/cli@20

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Build for environment
        run: |
          if [ "${{ steps.set-env.outputs.env }}" == "sit" ] || [ "${{ steps.set-env.outputs.env }}" == "all" ]; then
            echo "Building for SIT..."
            cd client
            npm install
            ng build --configuration sit
            cd ..
            dotnet build --configuration SIT
            dotnet publish -c SIT -o publish-sit
          fi

          if [ "${{ steps.set-env.outputs.env }}" == "qa" ] || [ "${{ steps.set-env.outputs.env }}" == "all" ]; then
            echo "Building for QA..."
            cd client
            npm install
            ng build --configuration qa
            cd ..
            dotnet build --configuration QA
            dotnet publish -c QA -o publish-qa
          fi

          if [ "${{ steps.set-env.outputs.env }}" == "uat" ] || [ "${{ steps.set-env.outputs.env }}" == "all" ]; then
            echo "Building for UAT..."
            cd client
            npm install
            ng build --configuration uat
            cd ..
            dotnet build --configuration UAT
            dotnet publish -c UAT -o publish-uat
          fi

      - name: Upload SIT artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-sit
          path: ./publish-sit

      - name: Upload QA artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-qa
          path: ./publish-qa

      - name: Upload UAT artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-uat
          path: ./publish-uat

  deploy-to-sit:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    environment: SIT
    steps:
      - name: Download SIT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-sit
          path: ./publish-sit

      - name: Deploy to SIT
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish-sit

  deploy-to-qa:
    if: github.event_name == 'push'
    needs: deploy-to-sit
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - name: Download QA artifact
        uses: actions/download-artifact@v4
        with:
          name: app-qa
          path: ./publish-qa

      - name: Deploy to QA
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish-qa

  deploy-to-uat:
    if: github.event_name == 'push'
    needs: deploy-to-qa
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - name: Download UAT artifact
        uses: actions/download-artifact@v4
        with:
          name: app-uat
          path: ./publish-uat

      - name: Deploy to UAT
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish-uat

  manual-deploy:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Download artifact for selected environment
        uses: actions/download-artifact@v4
        with:
          name: app-${{ github.event.inputs.environment }}
          path: ./publish

      - name: Deploy to selected environment
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets[format('APP_SERVICE_NAME_{0}', github.event.inputs.environment | upper)] }}
          publish-profile: ${{ secrets[format('AZURE_WEBAPP_PUBLISH_PROFILE_{0}', github.event.inputs.environment | upper)] }}
          package: ./publish
