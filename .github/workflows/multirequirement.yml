name: Multireq

on:
  push:
  
  workflow_dispatch:
    inputs:
      deployment_type:
        description: "Select deployment type"
        required: true
        type: choice
        options:
          - single
          - sequential
      environment:
        description: "Environment to deploy (for single or sequential)"
        required: true
        type: choice
        options:
          - sit
          - qa
          - uat

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-list: ${{ steps.set-build-list.outputs.list }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - id: set-build-list
        run: |
          ORDER=("sit" "qa" "uat")
          echo "list=${ORDER[*]}" >> $GITHUB_OUTPUT

      - name: Build for all environments
        run: |
          for e in sit qa uat; do
            echo "=== Building for $e ==="
            cd client
            npm ci
            npx ng build --configuration "$e"
            cd ..
            dotnet publish API/API.csproj -c Release -o "./publish-$e"
          done

  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        envlist: [sit, qa, uat]
      max-parallel: 1  # ensures sequential order
    steps:
      - name: Set target environment logic
        id: set-target
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "target_env=uat" >> $GITHUB_OUTPUT
            echo "mode=auto" >> $GITHUB_OUTPUT
          else
            echo "target_env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "mode=${{ github.event.inputs.deployment_type }}" >> $GITHUB_OUTPUT
          fi

      - name: Skip logic
        id: skip
        run: |
          ENV=${{ matrix.envlist }}
          MODE=${{ steps.set-target.outputs.mode }}
          TARGET=${{ steps.set-target.outputs.target_env }}

          # Order array
          ORDER=("sit" "qa" "uat")

          # Determine skip or not
          SKIP=true
          for e in "${ORDER[@]}"; do
            if [[ "$ENV" == "$e" ]]; then
              SKIP=false
            fi
            if [[ "$TARGET" == "$e" ]]; then
              break
            fi
          done

          # For single mode, deploy only the chosen env
          if [[ "$MODE" == "single" && "$ENV" != "$TARGET" ]]; then
            SKIP=true
          fi

          echo "skip=$SKIP" >> $GITHUB_OUTPUT

      - name: Deploy to Azure App Service
        if: steps.skip.outputs.skip == 'false'
        uses: azure/webapps-deploy@v3.0.5
        with:
          app-name: ${{ secrets.APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish-${{ matrix.envlist }}
