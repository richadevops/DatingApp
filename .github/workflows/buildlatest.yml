name: latest Build & Deploy Multienv Pipeline

on:
  push:

  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to build/deploy"
        required: true
        type: choice
        options:
          - sit
          - qa
          - uat
          - all

jobs:
  build:
    runs-on: windows-latest
    outputs:
      build-list: ${{ steps.set-env.outputs.env-list }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Determine environments to build
        id: set-env
        shell: pwsh
        run: |
          $envInput = "${{ github.event.inputs.environment }}"  # sit, qa, uat, all
          $order = @("sit","qa","uat")
          $envList = @()

          if ($envInput -eq "all") {
              $envList = $order
          } elseif ($order -contains $envInput) {
              $index = $order.IndexOf($envInput)
              $envList = $order[0..$index]  # sequential up to chosen environment
          }

          Write-Host "Environments to build: $($envList -join ', ')"
          Write-Output "env-list=$($envList -join ' ')" >> $GITHUB_OUTPUT

      - name: Build & publish Angular + .NET per environment
        shell: pwsh
        run: |
          $envList = "${{ steps.set-env.outputs.env-list }}".Split(' ')
          cd client
          npm install
          foreach ($env in $envList) {
              if ([string]::IsNullOrEmpty($env)) { continue }

              Write-Host "=== Building $env ==="
              npx ng build --configuration $env
              cd ..
              dotnet build --configuration $env
              dotnet publish -c $env -o "./publish-$env"
              cd client
          }

      - name: Upload SIT artifact
        if: contains(steps.set-env.outputs.env-list, 'sit')
        uses: actions/upload-artifact@v4
        with:
          name: app-sit
          path: ./publish-sit

      - name: Upload QA artifact
        if: contains(steps.set-env.outputs.env-list, 'qa')
        uses: actions/upload-artifact@v4
        with:
          name: app-qa
          path: ./publish-qa

      - name: Upload UAT artifact
        if: contains(steps.set-env.outputs.env-list, 'uat')
        uses: actions/upload-artifact@v4
        with:
          name: app-uat
          path: ./publish-uat
