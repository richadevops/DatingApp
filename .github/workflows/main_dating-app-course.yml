name: Build and deploy ASP.Net Core app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read 

    steps:
      - name: checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up node.jobs
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Angular cli
        run: npm install -g @angular/cli@20

      - name: Install deps and build angular app
        run: |
          cd client
          npm install
          ng build

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 'v9.0'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o publish

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: publish/

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: publish
      
      - name: deploy to IIS
        shell: pwsh
        env:
          WINRM_HOST: ${{ secrets.WINRM_HOST }}
          WINRM_USER: ${{ secrets.WINRM_USER }}
          WINRM_PASS: ${{ secrets.WINRM_PASS }}
        run: |
         $username = $env:WINRM_USER
         $password = ConvertTo-SecureString $env:WINRM_PASS -AsPlainText -Force
         $cred = New-Object System.Management.Automation.PSCredential ($username, $password)
         Set-Item -Path WSMan:\localhost\Client\AllowUnencrypted -Value $true
         Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value $env:WINRM_HOST -Force
         $session = New-PSSession -ComputerName $env:WINRM_HOST -Credential $cred -Authentication Basic
         # Create IIS folder and clean old files
         Invoke-Command -Session $session -ScriptBlock {
           $siteName = "datingapplatest"
           $port = 8086
           $physicalPath = "C:\inetpub\$siteName"
          
           if (!(Test-Path $physicalPath)) {
             New-Item -Path $physicalPath -ItemType Directory -Force
           }
           Get-ChildItem -Path $physicalPath -Recurse -Force | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
           Import-Module WebAdministration
          
           if (-Not (Get-Website | Where-Object { $_.Name -eq $siteName })) {
             New-Website -Name $siteName -Port $port -PhysicalPath $physicalPath -Force
           } else {
             Restart-WebAppPool -Name $siteName
           }
         }
         # Copy files to remote machine using PowerShell session
         Copy-Item -Path ".\publish\*" -Destination "C:\inetpub\datingapplatest" -Recurse -Force -ToSession $session
         # Clean up
         Remove-PSSession -Session $session

